a	Modifies the default behavior of the html A tag so that the default action is prevented when	directive
form	Directive that instantiates	directive
input	HTML input element control with angular data-binding. Input control follows HTML5 input types	directive
ngApp	Use this directive to auto-bootstrap an AngularJS application. The ngApp directive	directive
ngBind	The ngBind attribute tells Angular to replace the text content of the specified HTML element	directive
ngBindHtml	Creates a binding that will innerHTML the result of evaluating the expression into the current	directive
ngBindTemplate	The ngBindTemplate directive specifies that the element	directive
ngBlur	Specify custom behavior on blur event.	directive
ngChange	Evaluate given expression when user changes the input.	directive
ngChecked	The HTML specification does not require browsers to preserve the values of boolean attributes	directive
ngClass	The ngClass directive allows you to dynamically set CSS classes on an HTML element by databinding	directive
ngClassEven	The ngClassOdd and ngClassEven directives work exactly as	directive
ngClassOdd	The ngClassOdd and ngClassEven directives work exactly as	directive
ngClick	The ngClick directive allows you to specify custom behavior when	directive
ngCloak	The ngCloak directive is used to prevent the Angular html template from being briefly	directive
ngController	The ngController directive attaches a controller class to the view. This is a key aspect of how angular	directive
ngCopy	Specify custom behavior on copy event.	directive
ngCsp	Enables CSP (Content Security Policy) support.	directive
ngCut	Specify custom behavior on cut event.	directive
ngDblclick	The ngDblclick directive allows you to specify custom behavior on a dblclick event.	directive
ngDisabled	The following markup will make the button enabled on Chrome/Firefox but not on IE8 and older IEs:	directive
ngFocus	Specify custom behavior on focus event.	directive
ngForm	Nestable alias of form directive. HTML	directive
ngHide	The ngHide directive shows or hides the given HTML element based on the expression	directive
ngHref	Using Angular markup like &#123;&#123;hash&#125;&#125; in an href attribute will	directive
ngIf	The ngIf directive removes or recreates a portion of the DOM tree based on an	directive
ngInclude	Fetches, compiles and includes an external HTML fragment.	directive
ngInit	The ngInit directive allows you to evaluate an expression in the	directive
ngKeydown	Specify custom behavior on keydown event.	directive
ngKeypress	Specify custom behavior on keypress event.	directive
ngKeyup	Specify custom behavior on keyup event.	directive
ngList	Text input that converts between a delimited string and an array of strings. The delimiter	directive
ngModel	The ngModel directive binds an input,select, textarea (or custom form control) to a	directive
ngMousedown	The ngMousedown directive allows you to specify custom behavior on mousedown event.	directive
ngMouseenter	Specify custom behavior on mouseenter event.	directive
ngMouseleave	Specify custom behavior on mouseleave event.	directive
ngMousemove	Specify custom behavior on mousemove event.	directive
ngMouseover	Specify custom behavior on mouseover event.	directive
ngMouseup	Specify custom behavior on mouseup event.	directive
ngNonBindable	The ngNonBindable directive tells Angular not to compile or bind the contents of the current	directive
ngOpen	The HTML specification does not require browsers to preserve the values of boolean attributes	directive
ngPaste	Specify custom behavior on paste event.	directive
ngPluralize	Overview	directive
ngReadonly	The HTML specification does not require browsers to preserve the values of boolean attributes	directive
ngRepeat	The ngRepeat directive instantiates a template once per item from a collection. Each template	directive
ngSelected	The HTML specification does not require browsers to preserve the values of boolean attributes	directive
ngShow	The ngShow directive shows or hides the given HTML element based on the expression	directive
ngSrc	Using Angular markup like &#123;&#123;hash&#125;&#125; in a src attribute doesn&#39;t	directive
ngSrcset	Using Angular markup like &#123;&#123;hash&#125;&#125; in a srcset attribute doesn&#39;t	directive
ngStyle	The ngStyle directive allows you to set CSS style on an HTML element conditionally.	directive
ngSubmit	Enables binding angular expressions to onsubmit events.	directive
ngSwitch	The ngSwitch directive is used to conditionally swap DOM structure on your template based on a scope expression.	directive
ngTransclude	Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.	directive
ngValue	Binds the given expression to the value of input[select] or input[radio], so	directive
script	Load content of a script tag, with type text/ng-template, into $templateCache, so that the	directive
select	HTML SELECT element with angular data-binding.	directive
textarea	HTML textarea element control with angular data-binding. The data-binding and validation	directive
currency	Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default	filter
date	Formats date to a string based on the requested format.	filter
filter	Selects a subset of items from array and returns it as a new array.	filter
json	Allows you to convert a JavaScript object into JSON string.	filter
lowercase	Converts string to lowercase.	filter
number	Formats a number as text.	filter
uppercase	Converts string to uppercase.	filter
angular.bind	Returns a function which calls function fn bound to self (self becomes the this for	function
angular.bootstrap	Use this function to manually start up angular application.	function
angular.copy	Creates a deep copy of source, which should be an object or an array.	function
angular.element	Wraps a raw DOM element or HTML string as a jQuery element.	function
angular.equals	Determines if two objects or two values are equivalent. Supports value types, regular	function
angular.extend	Extends the destination object dst by copying all of the properties from the src object(s)	function
angular.forEach	Invokes the iterator function once for each item in obj collection, which can be either an	function
angular.fromJson	Deserializes a JSON string.	function
angular.identity	A function that returns its first argument. This function is useful when writing code in the	function
angular.injector	Creates an injector function that can be used for retrieving services as well as for	function
angular.isArray	Determines if a reference is an Array.	function
angular.isDate	Determines if a value is a date.	function
angular.isDefined	Determines if a reference is defined.	function
angular.isElement	Determines if a reference is a DOM element (or wrapped jQuery element).	function
angular.isFunction	Determines if a reference is a Function.	function
angular.isNumber	Determines if a reference is a Number.	function
angular.isObject	Determines if a reference is an Object. Unlike typeof in JavaScript, nulls are not	function
angular.isString	Determines if a reference is a String.	function
angular.isUndefined	Determines if a reference is undefined.	function
angular.lowercase	Converts the specified string to lowercase.	function
angular.mock.dump	NOTE: this is not an injectable instance, just a globally available function.	function
angular.mock.inject	NOTE: This function is also published on window for easy access.	function
angular.mock.module	NOTE: This function is also published on window for easy access.	function
angular.module	The angular.module is a global place for creating, registering and retrieving Angular	function
angular.noop	A function that performs no operations. This function can be useful when writing code in the	function
angular.toJson	Serializes input into a JSON-formatted string. Properties with leading $ characters will be	function
angular.uppercase	Converts the specified string to uppercase.	function
ng.$anchorScroll	When called, it checks current value of $location.hash() and scroll to related element,	function
ng.$compile	Compiles a piece of HTML string or DOM into a template and produces a template function, which	function
ng.$controller	$controller service is responsible for instantiating controllers.	function
ng.$exceptionHandler	Any uncaught exception in angular expressions is delegated to this service.	function
ng.$filter	Filters are used for formatting data displayed to the user.	function
ng.$http	The $http service is a core Angular service that facilitates communication with the remote	function
ng.$interpolate	Compiles a string with markup into an interpolation function. This service is used by the	function
ng.$interval	Angular&#39;s wrapper for window.setInterval. The fn function is executed every delay	function
ng.$parse	Converts Angular expression into a function.	function
ng.$rootScope.Scope	A root scope can be retrieved using the $rootScope key from the	function
ng.$timeout	Angular&#39;s wrapper for window.setTimeout. The fn function is wrapped into a try/catch	function
limitTo	Creates a new array or string containing only a specified number of elements. The elements	function
orderBy	Orders a specified array by the expression predicate.	function
angular.version	An object that contains information about the current AngularJS version. This object has the	property
angular.mock.TzDate	NOTE: this is not an injectable instance, just a globally available mock class of Date.	service
ng.$animate	The $animate service provides rudimentary DOM manipulation functions to	service
ng.$animateProvider	Default implementation of $animate that doesn&#39;t perform any animations, instead just	service
ng.$cacheFactory	Factory that constructs cache objects and gives access to them.	service
ng.$compile.directive.Attributes	A shared object between directive compile / linking functions which contains normalized DOM	service
ng.$compileProvider		service
ng.$controllerProvider	The $controller service is used by Angular to create new	service
ng.$document	A jQuery (lite)-wrapped reference to the browser&#39;s window.document	service
ng.$filterProvider	Filters are just functions which transform input to an output. However filters need to be	service
ng.$httpBackend	HTTP backend used by the service that delegates to	service
ng.$interpolateProvider	Used for configuring the interpolation markup. Defaults to &#123;&#123; and &#125;&#125;.	service
ng.$locale	$locale service provides localization rules for various Angular components. As of right now the	service
ng.$location	The $location service parses the URL in the browser address bar (based on the	service
ng.$locationProvider	Use the $locationProvider to configure how the application deep linking paths are stored.	service
ng.$log	Simple service for logging. Default implementation safely writes the message	service
ng.$logProvider	Use the $logProvider to configure how the application logs messages	service
ng.$parseProvider	$parseProvider can be used for configuring the default behavior of the $parse	service
ng.$q	A promise/deferred implementation inspired by Kris Kowal&#39;s Q.	service
ng.$rootScope	Every application has a single root scope.	service
ng.$rootScopeProvider	Provider for the $rootScope service.	service
ng.$sce	$sce is a service that provides Strict Contextual Escaping services to AngularJS.	service
ng.$sceDelegate	$sceDelegate is a service that is used by the $sce service to provide Strict Contextual Escaping (SCE) services to AngularJS.	service
ng.$sceDelegateProvider	The $sceDelegateProvider provider allows developers to configure the $sceDelegate service. This allows one to get/set the whitelists and blacklists used to ensure	service
ng.$sceProvider	The $sceProvider provider allows developers to configure the $sce service.	service
ng.$templateCache	The first time a template is used, it is loaded in the template cache for quick retrieval. You	service
ng.$window	A reference to the browser&#39;s window object. While window	service
form.FormController	FormController keeps track of all its controls and nested forms as well as state of them,	service
ngModel.NgModelController	NgModelController provides API for the ng-model directive. The controller contains	service
